$date
	Sun Mar 10 22:18:01 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module registers_tb $end
$var wire 32 ! reg_data2 [31:0] $end
$var wire 32 " reg_data1 [31:0] $end
$var reg 5 # adr_reg1 [4:0] $end
$var reg 5 $ adr_reg2 [4:0] $end
$var reg 5 % adr_wr_reg [4:0] $end
$var reg 1 & clk $end
$var reg 1 ' regwrite $end
$var reg 1 ( rst $end
$var reg 32 ) wr_data [31:0] $end
$scope module registro_prueba $end
$var wire 5 * adr_reg1 [4:0] $end
$var wire 5 + adr_reg2 [4:0] $end
$var wire 5 , adr_wr_reg [4:0] $end
$var wire 1 & clk $end
$var wire 32 - reg_data1 [31:0] $end
$var wire 32 . reg_data2 [31:0] $end
$var wire 1 ' regwrite $end
$var wire 1 ( rst $end
$var wire 32 / wr_data [31:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
0(
0'
0&
bx %
bx $
bx #
bx "
bx !
$end
#5000
1(
b100000 0
1&
#10000
b11 )
b11 /
b1 %
b1 ,
b0 !
b0 .
b10 $
b10 +
b0 "
b0 -
b1 #
b1 *
0&
#15000
1'
1&
#20000
0&
#25000
b11 "
b11 -
0'
1&
#30000
0&
#35000
1&
#40000
0&
#45000
1&
#50000
0&
#55000
1&
#60000
0&
#65000
1&
#70000
0&
#75000
1&
#80000
0&
#85000
1&
#90000
0&
#95000
1&
#100000
0&
#105000
1&
#110000
0&
#115000
1&
#120000
0&
#125000
1&
